import java.util.*;
class Solution {
    static int N;
    static ArrayList<String> result;
    public static void dfs(String[][] tickets, String s, boolean[] v, String route, int cnt){
        if(cnt==N){
            result.add(route);
            return;
        }
        
        for(int i=0; i<N; i++){
            if(tickets[i][0].compareTo(s)==0 && !v[i]){
                v[i] = true;
                String temp = new String(route);
                dfs(tickets, tickets[i][1], v, route.concat(tickets[i][1]), cnt+1);
                route = temp;
                v[i] = false;
            }
        }
    }
    
    public String[] solution(String[][] tickets) {
        N = tickets.length;
        String[] answer = new String[tickets.length+1];
        result = new ArrayList<>();
        dfs(tickets, "ICN", new boolean[N], "ICN", 0);
        Collections.sort(result);
        int size = result.get(0).length();
        for(int i=0; i<size; i+=3){
            answer[i/3]=result.get(0).substring(i, i+3);
        }
        return answer;
    }
}